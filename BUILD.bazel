load(
    "@gz//bazel/skylark:build_defs.bzl",
    "GZ_FEATURES",
    "GZ_ROOT",
    "GZ_VISIBILITY",
    "gz_configure_header",
    "gz_export_header",
    "gz_include_header",
)

package(
    default_visibility = GZ_VISIBILITY,
    features = GZ_FEATURES,
)

licenses(["notice"])  # Apache-2.0

exports_files(["LICENSE"])

gz_configure_header(
    name = "physics_config_hh",
    src = "include/gz/physics/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    defines = {
        # These definitions are unused,
        # this is merely to suppress generator warnings
        "GZ_PHYSICS_ENGINE_INSTALL_DIR": "unused",
    },
    package = "physics",
)

gz_export_header(
    name = "include/gz/physics/Export.hh",
    export_base = "GZ_PHYSICS",
    lib_name = "gz-physics",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/gz/physics/*.hh",
    "include/gz/physics/detail/*.hh",
])

sources = glob(
    ["src/*.cc"],
    exclude = [
        "src/*_TEST.cc",
    ],
)

gz_include_header(
    name = "physics_hh_genrule",
    out = "include/gz/physics.hh",
    hdrs = public_headers_no_gen + [
        "include/gz/physics/config.hh",
        "include/gz/physics/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/gz/physics/config.hh",
    "include/gz/physics/Export.hh",
    "include/gz/physics.hh",
]

cc_library(
    name = "physics",
    srcs = sources,
    hdrs = public_headers,
    defines = [
        'GZ_PHYSICS_ENGINE_RELATIVE_INSTALL_DIR=\\"unused\\"',
        "GZ_PHYSICS_BAZEL_BUILD=true",
    ],
    includes = ["include"],
    deps = [
        GZ_ROOT + "math",
        GZ_ROOT + "math/eigen3",
        GZ_ROOT + "plugin:core",
        GZ_ROOT + "plugin:loader",
        GZ_ROOT + "utils",
    ],
)

cc_library(
    name = "heightmap",
    hdrs = [
        "heightmap/include/gz/physics/heightmap/HeightmapShape.hh",
        "heightmap/include/gz/physics/heightmap/detail/HeightmapShape.hh",
    ],
    includes = ["heightmap/include"],
)

cc_library(
    name = "mesh",
    hdrs = [
        "mesh/include/gz/physics/mesh/MeshShape.hh",
        "mesh/include/gz/physics/mesh/detail/MeshShape.hh",
    ],
    includes = ["mesh/include"],
)

cc_library(
    name = "sdf",
    hdrs = glob([
        "sdf/include/gz/physics/sdf/*.hh",
    ]),
    includes = ["sdf/include"],
    deps = [
        GZ_ROOT + "sdformat",
    ],
)

test_sources = glob(
    include = ["src/*_TEST.cc"],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    env = {
        "GZ_BAZEL": "1",
        "GZ_BAZEL_PATH": "physics",
    },
    deps = [
        ":physics",
        GZ_ROOT + "physics/test:test_headers",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]
