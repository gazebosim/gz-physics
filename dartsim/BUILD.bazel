load("@rules_gazebo//gazebo:headers.bzl", "gz_export_header")

package(
    default_applicable_licenses = ["//:license"],
    features = [
        "layering_check",
        "parse_headers",
    ],
)

gz_export_header(
    name = "Export",
    out = "include/gz/physics/dartsim-plugin/Export.hh",
    export_base = "GZ_PHYSICS_DARTSIM_PLUGIN",
    lib_name = "gz-physics-dartsim",
)

public_headers = [
    "include/gz/physics/dartsim-plugin/Export.hh",
]

private_headers = glob(
    include = ["src/*.hh"],
    exclude = ["src/Worlds.hh"],
)

sources = glob(
    ["src/*.cc"],
    exclude = [
        "src/*_TEST.cc",
        "src/plugin.cc",
    ],
)

cc_library(
    name = "dartsim",
    srcs = sources + private_headers,
    hdrs = public_headers,
    includes = [
        "include",
        "src",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:gz-physics",
        "//:heightmap",
        "//:mesh",
        "//:sdf",
        "@dartsim//:dart-collision-bullet",
        "@dartsim//:dart-collision-core",
        "@dartsim//:dart-collision-dart",
        "@dartsim//:dart-collision-fcl",
        "@dartsim//:dart-collision-ode",
        "@dartsim//:dart-config",
        "@dartsim//:dart-constraint",
        "@dartsim//:dart-dynamics",
        "@dartsim//:dart-simulation",
        "@eigen",
        "@gz-common//:gz-common",
        "@gz-common//geospatial:geospatial",
        "@gz-common//graphics:graphics",
        "@gz-common//profiler:profiler",
        "@gz-math//:gz-math",
        "@gz-math//eigen3:eigen3",
        "@gz-utils//:SuppressWarning",
        "@sdformat",
    ],
)

cc_binary(
    name = "libgz-physics-dartsim-plugin.so",
    srcs = ["src/plugin.cc"] + private_headers,
    defines = [
        "BAZEL_DARTSIM_DISABLE_UNREGISTER_COLLISION_DETECTORS",
    ],
    linkshared = True,
    visibility = ["//visibility:public"],
    deps = [
        ":dartsim",
        "//:gz-physics",
        "//:heightmap",
        "//:mesh",
        "//:sdf",
        "@dartsim//:dart-collision-bullet",
        "@dartsim//:dart-collision-core",
        "@dartsim//:dart-collision-dart",
        "@dartsim//:dart-collision-fcl",
        "@dartsim//:dart-collision-ode",
        "@dartsim//:dart-config",
        "@dartsim//:dart-constraint",
        "@dartsim//:dart-dynamics",
        "@dartsim//:dart-simulation",
        "@eigen",
        "@gz-common//:gz-common",
        "@gz-common//geospatial:geospatial",
        "@gz-common//graphics:graphics",
        "@gz-common//profiler:profiler",
        "@gz-math//:gz-math",
        "@gz-math//eigen3:eigen3",
        "@gz-plugin//:register",
        "@gz-utils//:SuppressWarning",
        "@sdformat",
    ],
)

cc_test(
    name = "dartsim_WorldFeatures_TEST",
    srcs = [
        "src/WorldFeatures_TEST.cc",
    ] + private_headers,
    data = [
        "//dartsim:libgz-physics-dartsim-plugin.so",
    ],
    env = {
        "GZ_BAZEL": "1",
    },
    deps = [
        "//:gz-physics",
        "//:heightmap",
        "//:mesh",
        "//:sdf",
        "//dartsim",
        "//test:common_test",
        "//test:test_headers",
        "@dartsim//:dart-collision-bullet",
        "@dartsim//:dart-collision-core",
        "@dartsim//:dart-collision-ode",
        "@dartsim//:dart-config",
        "@dartsim//:dart-constraint",
        "@dartsim//:dart-dynamics",
        "@dartsim//:dart-simulation",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@gz-common//:gz-common",
        "@gz-common//geospatial:geospatial",
        "@gz-common//graphics:graphics",
        "@gz-math//:gz-math",
        "@gz-math//eigen3:eigen3",
        "@gz-plugin//:core",
        "@gz-plugin//:loader",
        "@sdformat",
    ],
)

cc_test(
    name = "dartsim_SDFFeatures_TEST",
    srcs = [
        "src/SDFFeatures_TEST.cc",
        "src/Worlds.hh",
    ] + private_headers,
    data = [
        "worlds",
        "//dartsim:libgz-physics-dartsim-plugin.so",
        "//test:common_test/worlds",
    ],
    env = {
        "GZ_BAZEL": "1",
    },
    deps = [
        "//:gz-physics",
        "//:heightmap",
        "//:mesh",
        "//:sdf",
        "//dartsim",
        "//test:common_test",
        "//test:test_headers",
        "@dartsim//:dart-collision-bullet",
        "@dartsim//:dart-collision-core",
        "@dartsim//:dart-collision-ode",
        "@dartsim//:dart-config",
        "@dartsim//:dart-constraint",
        "@dartsim//:dart-dynamics",
        "@dartsim//:dart-simulation",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@gz-common//:gz-common",
        "@gz-common//geospatial:geospatial",
        "@gz-common//graphics:graphics",
        "@gz-common//testing:testing",
        "@gz-math//:gz-math",
        "@gz-math//eigen3:eigen3",
        "@gz-plugin//:core",
        "@gz-plugin//:loader",
        "@sdformat",
    ],
)

cc_test(
    name = "dartsim_AddedMassFeatures_TEST",
    srcs = [
        "src/AddedMassFeatures_TEST.cc",
        "src/Worlds.hh",
    ] + private_headers,
    data = [
        "worlds",
        "//dartsim:libgz-physics-dartsim-plugin.so",
    ],
    env = {
        "GZ_BAZEL": "1",
    },
    deps = [
        "//:gz-physics",
        "//:heightmap",
        "//:mesh",
        "//:sdf",
        "//dartsim",
        "//test:common_test",
        "//test:test_headers",
        "@dartsim//:dart-collision-bullet",
        "@dartsim//:dart-collision-core",
        "@dartsim//:dart-collision-ode",
        "@dartsim//:dart-config",
        "@dartsim//:dart-constraint",
        "@dartsim//:dart-dynamics",
        "@dartsim//:dart-simulation",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@gz-common//:gz-common",
        "@gz-common//geospatial:geospatial",
        "@gz-common//graphics:graphics",
        "@gz-common//testing:testing",
        "@gz-math//:gz-math",
        "@gz-math//eigen3:eigen3",
        "@gz-plugin//:core",
        "@gz-plugin//:loader",
        "@sdformat",
    ],
)
